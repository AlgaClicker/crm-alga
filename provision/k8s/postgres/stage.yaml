apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
  namespace: stage
spec:
  type: NodePort
  ports:
  - port: 5432
    nodePort: 31432
  selector:
    app: postgres
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
  namespace: stage
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:11.5-alpine
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-config
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgredb
      volumes:
      - name: postgredb
        persistentVolumeClaim:
          claimName: postgres-pv-claim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
  namespace: stage
data:
  POSTGRES_DB: dronbox
  POSTGRES_USER: dronbox_user
  POSTGRES_PASSWORD: dronbox_secret
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-stage-pv-volume
  labels:
    type: local
    app: postgres
  namespace: stage
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
  - ReadWriteMany
  hostPath:
    path: "/mnt/stage/postgres/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
  namespace: stage
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
