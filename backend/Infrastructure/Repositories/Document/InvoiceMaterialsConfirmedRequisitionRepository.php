<?php

namespace Infrastructure\Repositories\Document;
use Doctrine\ORM\EntityManager;
use Infrastructure\Repositories\AbstractRepository;

use Domain\Contracts\Repository\Services\FileRepositoryContracts;

use Domain\Entities\Business\Master\Requisition;
use Domain\Entities\Business\Master\RequisitionMaterials;

use Domain\Entities\Business\Document\Requisition\Invoice\MaterialReceived;
use Domain\Entities\Business\Document\Requisition\Invoice\Material as InvoiceMaterial;

/**
 * CommentsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvoiceMaterialsConfirmedRequisitionRepository extends AbstractRepository
{
    private FileRepositoryContracts $fileRepository;
    public function __construct(
        EntityManager $em,
        MaterialReceived $entity,
        FileRepositoryContracts $fileRepository
    ){
        $this->fileRepository = $fileRepository;
        parent::__construct($em, $entity);
    }


    public function loadNew($arrAttributes = null) : MaterialReceived
    {
        return parent::loadNew($arrAttributes); // TODO: Change the autogenerated stub
    }


    public function getQuantityConfirmed(InvoiceMaterial $invoice_material)
    {
        $qb = $this->em->createQueryBuilder();
        $qb = $qb->select('sum(imcr.quantity) as sum')->from(MaterialReceived::class,'imcr');
        $qb = $qb->where($qb->expr()->eq('imcr.requisitionInvoiceMaterial',":requisition_material"));
        $query = $this->em->createQuery($qb->getDQL());
        $query->setParameter('requisition_material', $invoice_material);
        $summa = $query->getSingleResult()['sum'] ?? 0;
        return $summa;
    }

}
