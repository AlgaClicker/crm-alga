<?php

namespace Infrastructure\Repositories\Crm;
use Doctrine\ORM\EntityManager;
use Infrastructure\Repositories\AbstractRepository;
use Domain\Contracts\Repository\Crm\TimesheetRepositoryContracts;
use Domain\Entities\Business\Master\Timesheet;
use Doctrine\Common\Collections\Criteria;

/**
 * CommentsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class TimesheetRepository extends AbstractRepository implements TimesheetRepositoryContracts
{
    public function __construct(EntityManager $em, Timesheet $entity)
    {
        parent::__construct($em, $entity);
    }

    public function listTimeSheet($people,$month,$year) {
        $currentMonthDateTime = new \DateTimeImmutable("$month/01/$year");
        $firstDateTime = $currentMonthDateTime->modify('first day of this month')->format('m/d/Y H:i:s');
        $lastDateTime = $currentMonthDateTime->modify('last day of this month 23:59:59')->format('m/d/Y H:i:s');
        $qb = $this->em->createQueryBuilder();

        $qb = $qb->select('ts')->from(get_class($this->entity),'ts');
        $qb = $qb->where("ts.date between '".$firstDateTime."' AND '".$lastDateTime."'");
        $qb = $qb->andWhere("ts.workpeople = :person");

        $query = $this->em->createQuery($qb->getDQL());
        $query->setParameter('person', $people);
        $result = $query->getResult();

        /*
        $timeSumm = 0;
        foreach ($result as $line) {
            $timeSumm = $timeSumm + $line->getTimeAmount();
        }

        $result = array_merge($result,[['summ_time'=>$timeSumm]]);
        */
        return $result;
    }



}
