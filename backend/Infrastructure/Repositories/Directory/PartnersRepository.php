<?php

namespace Infrastructure\Repositories\Directory;
use Doctrine\ORM\EntityManager;
use Infrastructure\Repositories\AbstractRepository;
use Domain\Contracts\Repository\Directory\PartnersRepositoryContract;
use Domain\Entities\Business\Directory\Partner;
use Doctrine\Common\Collections\Criteria;

/**
 * CommentsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class PartnersRepository extends AbstractRepository implements PartnersRepositoryContract
{

    public function __construct(EntityManager $em, Partner $entity)
    {
        parent::__construct($em, $entity);
    }

    public function delete($entity)
    {
        if ($entity->getRequisitionInvoice() && $entity->getRequisitionInvoice()->count()) {
            abort(400,'У контрагента найдено ['.$entity->getRequisitionInvoice()->count().'] счетов, удаление не возможно ');
        }

        if ($entity->getContracts() && $entity->getContracts()->count()) {
            abort(400,'У контрагента найдено ['.$entity->getContracts()->count().'] договоров, удаление не возможно ');
        }

        $entity->getBankAccounts()->clear();
        $this->em->persist($entity);
        $this->em->flush();

        return parent::delete($entity);
    }

    public function deleteById($entityId)
    {
        return $entityId;
    }
}
